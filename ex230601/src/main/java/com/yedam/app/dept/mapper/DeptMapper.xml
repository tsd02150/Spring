<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.yedam.app.dept.mapper.DeptMapper">
	<!-- 공통 -->
	<sql id="deptSelect">
		select department_id, department_name,manager_id,location_id
		from departments
	</sql>

	<!-- 전체 조회 -->
	<select id="selectDeptList" resultType="DeptVO">
		<include refid="deptSelect"></include>
	</select>
<!-- 	<select id="selectDeptList" resultType="DeptVO">
		select department_id,department_name,manager_id,location_id
		from departments
	</select> -->

	<!-- 단건 조회 -->	
	<select id="selectDept" resultType="DeptVO">
		<include refid="deptSelect"></include>
		where department_id=#{departmentId}
	</select>
	<!-- <select id="selectDept" resultType="DeptVO">
		select department_id,department_name,manager_id,location_id
		from departments
		where department_id=#{departmentId}
	</select> -->
	
	<!-- 등록 -->
	<insert id="insertDept" parameterType="DeptVO">
		<selectKey keyProperty="departmentId" resultType="int" order="BEFORE">
			select NVL(MAX(department_id),0)+10
			from departments
		</selectKey>
		insert into departments
		values(#{departmentId},#{departmentName},#{managerId},#{locationId})
	</insert>
	<!-- <insert id="insertDept" parameterType="DeptVO">
		<selectKey keyProperty="departmentId" resultType="String" order="BEFORE">
			select departments_seq.nextval from dual
		</selectKey>
		insert into departments
		values(#{departmentId},#{departmentName},#{managerId},#{locationId})
	</insert> -->
	
	<!-- 수정 -->
	<update id="updateDept" parameterType="DeptVO">
		update departments 
		<set>
			<if test="departmentName!=null and !departmentName.equals('')">
				department_name=#{departmentName}
			</if>
			<if test="managerId>0">
				, manager_id=#{managerId}
			</if>
			<if test="locationId>0">
				, location_id=#{locationId}
			</if>
			<if test="locationId lte 0">
				, location_id=1000
			</if>
		</set>
		where department_id=#{departmentId}
	</update>
	<!-- <update id="updateDept" parameterType="DeptVO">
		update departments 
		set department_name=#{departmentName},
			manager_id=#{managerId},
			location_id=#{locationId}
		where department_id=#{departmentId}
	</update> -->
	
	<delete id="deleteDept" parameterType="DeptVO">
		delete from departments where department_id=#{departmentId}
	</delete>
	
	<select id="selectManager" resultType="map">
		select employee_id "employeeId",first_name "firstName",last_name "lastName"
		from employees
		order by first_name
	</select>
	<select id="selectLocation" resultType="map">
		select location_id "locationId",city "city"
		from locations
		order by city
	</select>
</mapper>